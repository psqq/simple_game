{"version":3,"sources":["components/QuizOptions.js","components/Quiz.js","App.js","index.js"],"names":["QuizOptions","option","checkResults","className","onClick","props","Quiz","renderOptions","bind","playAgain","riddle","playGame","highScore","localStorage","getItem","state","correct","gameOver","score","min","max","Math","floor","random","sum","resultsArray","randomNumberArray","length","randomNumber","this","indexOf","push","i","result","difficulty","a","b","field1","field2","generateRandomOptions","sort","answer","setState","map","key","setItem","renderMessage","Component","App","ReactDOM","render","document","getElementById"],"mappings":"6NAaeA,EAXK,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAI7B,OACE,yBAAKC,UAAU,yBAAyBC,QAJhB,SAAAC,GACxB,OAAOH,EAAaD,KAIlB,yBAAKE,UAAU,eAAeF,KC6HrBK,E,YAjIb,WAAYD,GAAQ,IAAD,uBACjB,4CAAMA,KACDE,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKN,aAAe,EAAKA,aAAaM,KAAlB,gBACpB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBAEjB,IAAIE,EAAS,EAAKC,WAGdC,EAAYC,aAAaC,QAAQ,eAAiB,EATrC,OAUjB,EAAKC,MAAQ,CAAEL,SAAQM,SAHT,EAGkBC,UAFjB,EAE2BC,MAAO,EAAGN,aAVnC,E,0EAYNO,EAAKC,GAChB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,I,4CAEjCK,GAKpB,IAHA,IAAIC,EAAe,GACfC,EAAoB,GAEjBA,EAAkBC,QAAU,GAAG,CACpC,IAAIC,EAAeC,KAAKD,aAAa,EAAG,IACpCF,EAAkBI,QAAQF,IAAiB,GAC/CF,EAAkBK,KAAKH,GAEzB,IAAK,IAAII,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IACIC,EAAST,EACO,IAFFK,KAAKD,aAAa,EAAG,IAIrCK,GAAUP,EAAkBM,GAC5BP,EAAaM,KAAKE,KAGlBA,GAAUP,EAAkBM,GAC5BP,EAAaM,KAAKE,IAItB,OAAOR,I,iCAEiB,IAAjBS,EAAgB,uDAAH,EAChBC,EAAI,IAAM,GAAKD,GAAcA,EAC7BE,EAAI,IAAM,GAAKF,GAAcA,EAC7BG,EAASR,KAAKD,aAAaO,EAAGC,GAC9BE,EAAST,KAAKD,aAAaO,EAAG,GAAKC,GACnCH,EAASI,EAASC,EAClBb,EAAeI,KAAKU,sBAAsBN,GAC9CR,EAAaM,KAAKE,GAClBR,EAAae,MAAK,SAAUL,EAAGC,GAC7B,MAAO,GAAMf,KAAKE,YAGpB,IAAIb,EAAS,CACXe,aAAcA,EACdY,OAAQA,EACRC,OAAQA,EACRG,OAAQR,GAEV,IAAIJ,KAAKd,QAASc,KAAKd,MAAME,SAG3B,OAAOP,EAFPmB,KAAKa,SAAS,CAAEhC,OAAQA,M,mCAMfT,GACP4B,KAAKd,MAAML,OAAO+B,SAAWxC,EAC/B4B,KAAKa,SAAS,CAAE1B,SAAS,EAAMC,UAAU,IAEzCY,KAAKa,SAAS,CAAE1B,SAAS,EAAOC,UAAU,M,sCAG7B,IAAD,OACd,OACE,yBAAKd,UAAU,WACZ0B,KAAKd,MAAML,OAAOe,aAAakB,KAAI,SAAC1C,EAAQ+B,GAAT,OAClC,kBAAC,EAAD,CACE/B,OAAQA,EACR2C,IAAKZ,EACL9B,aAAc,SAAAD,GAAM,OAAI,EAAKC,aAAaD,Y,sCAOlD,OAAI4B,KAAKd,MAAMC,QACN,sFAEA,wF,kCAILa,KAAKd,MAAMC,SACba,KAAKd,MAAMG,QACPW,KAAKd,MAAMG,MAAQW,KAAKd,MAAMH,YAChCiB,KAAKd,MAAMH,UAAYiB,KAAKd,MAAMG,MAClCL,aAAagC,QAAQ,aAAchB,KAAKd,MAAMH,aAGhDiB,KAAKd,MAAMG,MAAQ,EAErBW,KAAKa,SAAS,CAAE1B,SAAS,EAAOC,UAAU,EAAOC,MAAOW,KAAKd,MAAMG,QACnEW,KAAKlB,SAASkB,KAAKd,MAAMG,S,+BAGzB,OACE,yBAAKf,UAAU,QACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,YAAb,qBACqB,IACnB,0BAAMA,UAAU,aAAa0B,KAAKd,MAAML,OAAO2B,QAFjD,OAEoE,IAClE,0BAAMlC,UAAU,aAAa0B,KAAKd,MAAML,OAAO4B,QAHjD,KAGkE,KAElE,wCAAcT,KAAKd,MAAMG,MAAzB,iBAA8CW,KAAKd,MAAMH,WACxDiB,KAAKtB,gBACN,yBAAKJ,UAAS,gBAAW0B,KAAKd,MAAMC,QAAU,4BAA8B,4BAA9D,YAA8Fa,KAAKd,MAAME,SAAoB,GAAT,SAAgBY,KAAKiB,iBACvJ,yBAAK3C,UAAU,cACb,uBAAGA,UAAU,SAASC,QAASyB,KAAKpB,WACjCoB,KAAKd,MAAMC,QAAU,WAAa,qB,GAzH9B+B,aCWJC,MATf,WACE,OACE,yBAAK7C,UAAU,OACb,2DACA,kBAAC,EAAD,QCJN8C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.77249891.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst QuizOptions = ({ option, checkResults }) => {\r\n  const callParentsOption = props => {\r\n    return checkResults(option);\r\n  }\r\n  return (\r\n    <div className='fields animated zoomIn' onClick={callParentsOption}>\r\n      <div className='field-block'>{option}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizOptions;\r\n","import React, { Component } from \"react\";\r\nimport QuizOptions from \"./QuizOptions\";\r\n\r\nclass Quiz extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.renderOptions = this.renderOptions.bind(this);\r\n    this.checkResults = this.checkResults.bind(this);\r\n    this.playAgain = this.playAgain.bind(this);\r\n\r\n    let riddle = this.playGame();\r\n    let correct = false;\r\n    let gameOver = false;\r\n    let highScore = localStorage.getItem(\"high-score\") || 0;\r\n    this.state = { riddle, correct, gameOver, score: 0, highScore };\r\n  }\r\n  randomNumber(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n  generateRandomOptions(sum) {\r\n    // let result = sum;\r\n    let resultsArray = [];\r\n    let randomNumberArray = [];\r\n\r\n    while (randomNumberArray.length <= 3) {\r\n      let randomNumber = this.randomNumber(1, 19);\r\n      if (randomNumberArray.indexOf(randomNumber) > -1) continue;\r\n      randomNumberArray.push(randomNumber);\r\n    }\r\n    for (let i = 0; i < 3; i++) {\r\n      let addSubtract = this.randomNumber(0, 1);\r\n      let result = sum;\r\n      if (addSubtract === 1) {\r\n        //add the number to the result\r\n        result += randomNumberArray[i];\r\n        resultsArray.push(result);\r\n      } else {\r\n        //subtract the number from the result\r\n        result -= randomNumberArray[i];\r\n        resultsArray.push(result);\r\n      }\r\n    }\r\n\r\n    return resultsArray;\r\n  }\r\n  playGame(difficulty = 0) {\r\n    let a = 20 + (10 + difficulty) * difficulty;\r\n    let b = 40 + (10 + difficulty) * difficulty;\r\n    let field1 = this.randomNumber(a, b);\r\n    let field2 = this.randomNumber(a, 10 + b);\r\n    let result = field1 + field2;\r\n    let resultsArray = this.generateRandomOptions(result);\r\n    resultsArray.push(result);\r\n    resultsArray.sort(function (a, b) {\r\n      return 0.5 - Math.random();\r\n    });\r\n\r\n    let riddle = {\r\n      resultsArray: resultsArray,\r\n      field1: field1,\r\n      field2: field2,\r\n      answer: result\r\n    };\r\n    if (this.state && this.state.gameOver) {\r\n      this.setState({ riddle: riddle });\r\n    } else {\r\n      return riddle;\r\n    }\r\n\r\n  }\r\n  checkResults(option) {\r\n    if (this.state.riddle.answer === option) {\r\n      this.setState({ correct: true, gameOver: true });\r\n    } else {\r\n      this.setState({ correct: false, gameOver: true });\r\n    }\r\n  }\r\n  renderOptions() {\r\n    return (\r\n      <div className='options'>\r\n        {this.state.riddle.resultsArray.map((option, i) => (\r\n          <QuizOptions\r\n            option={option}\r\n            key={i}\r\n            checkResults={option => this.checkResults(option)}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n  renderMessage() {\r\n    if (this.state.correct) {\r\n      return <h3>Good job, Hit the button below to play the game again!</h3>;\r\n    } else {\r\n      return <h3> Ooopps!, Hit the button below to play the game again!</h3>;\r\n    }\r\n  }\r\n  playAgain() {\r\n    if (this.state.correct) {\r\n      this.state.score++;\r\n      if (this.state.score > this.state.highScore) {\r\n        this.state.highScore = this.state.score;\r\n        localStorage.setItem(\"high-score\", this.state.highScore);\r\n      }\r\n    } else {\r\n      this.state.score = 0;\r\n    }\r\n    this.setState({ correct: false, gameOver: false, score: this.state.score });\r\n    this.playGame(this.state.score);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='quiz'>\r\n        <div className='quiz-content'>\r\n          <p className='question'>\r\n            What is the sum of{\" \"}\r\n            <span className='text-info'>{this.state.riddle.field1}</span> and{\" \"}\r\n            <span className='text-info'>{this.state.riddle.field2}</span> ?{\" \"}\r\n          </p>\r\n          <span>Score: {this.state.score}, High score: {this.state.highScore}</span>\r\n          {this.renderOptions()}\r\n          <div className={`after ${this.state.correct ? 'correct animated zoomInUp' : 'wrong animated zoomInDown'} ${!this.state.gameOver ? 'hide' : \"\"}`}>{this.renderMessage()}</div>\r\n          <div className='play-again'>\r\n            <a className='button' onClick={this.playAgain}>\r\n              {this.state.correct ? \"Continue\" : \"Play Again\"}\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quiz;\r\n","import React from 'react';\r\nimport Quiz from './components/Quiz';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>*** A Simple React Game ***</h1>\r\n      <Quiz />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}