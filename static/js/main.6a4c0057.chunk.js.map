{"version":3,"sources":["components/QuizOptions.js","components/Quiz.js","App.js","index.js"],"names":["QuizOptions","option","checkResults","className","onClick","props","Quiz","renderOptions","bind","playAgain","riddle","playGame","state","correct","gameOver","min","max","Math","floor","random","sum","resultsArray","randomNumberArray","length","randomNumber","this","indexOf","push","i","result","field1","field2","generateRandomOptions","sort","a","b","answer","setState","map","key","renderMessage","Component","App","ReactDOM","render","document","getElementById"],"mappings":"6NAaeA,EAXK,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAI7B,OACE,yBAAKC,UAAU,yBAAyBC,QAJhB,SAAAC,GACxB,OAAOH,EAAaD,KAIlB,yBAAKE,UAAU,eAAeF,KC8GrBK,E,YAlHb,WAAYD,GAAQ,IAAD,uBACjB,4CAAMA,KACDE,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKN,aAAe,EAAKA,aAAaM,KAAlB,gBACpB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBAEjB,IAAIE,EAAS,EAAKC,WAND,OASjB,EAAKC,MAAQ,CAAEF,SAAQG,SAFT,EAEkBC,UADjB,GARE,E,0EAWNC,EAAKC,GAChB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,I,4CAEjCK,GAKpB,IAHA,IAAIC,EAAe,GACfC,EAAoB,GAEjBA,EAAkBC,QAAU,GAAG,CACpC,IAAIC,EAAeC,KAAKD,aAAa,EAAG,IACpCF,EAAkBI,QAAQF,IAAiB,GAC/CF,EAAkBK,KAAKH,GAEzB,IAAK,IAAII,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IACIC,EAAST,EACO,IAFFK,KAAKD,aAAa,EAAG,IAIrCK,GAAUP,EAAkBM,GAC5BP,EAAaM,KAAKE,KAGlBA,GAAUP,EAAkBM,GAC5BP,EAAaM,KAAKE,IAItB,OAAOR,I,iCAGP,IAAIS,EAASL,KAAKD,aAAa,GAAI,IAC/BO,EAASN,KAAKD,aAAa,GAAI,IAC/BK,EAASC,EAASC,EAClBV,EAAeI,KAAKO,sBAAsBH,GAC9CR,EAAaM,KAAKE,GAClBR,EAAaY,MAAK,SAASC,EAAGC,GAC5B,MAAO,GAAMlB,KAAKE,YAGpB,IAAIT,EAAS,CACXW,aAAcA,EACdS,OAAQA,EACRC,OAAQA,EACRK,OAAQP,GAEV,IAAGJ,KAAKb,QAASa,KAAKb,MAAME,SAG1B,OAAOJ,EAFPe,KAAKY,SAAS,CAAE3B,OAAQA,M,mCAMfT,GACPwB,KAAKb,MAAMF,OAAO0B,SAAWnC,EAC/BwB,KAAKY,SAAS,CAAExB,SAAS,EAAMC,UAAU,IAEzCW,KAAKY,SAAS,CAAExB,SAAS,EAAOC,UAAU,M,sCAG7B,IAAD,OACd,OACE,yBAAKX,UAAU,WACZsB,KAAKb,MAAMF,OAAOW,aAAaiB,KAAI,SAACrC,EAAQ2B,GAAT,OAClC,kBAAC,EAAD,CACE3B,OAAQA,EACRsC,IAAKX,EACL1B,aAAc,SAAAD,GAAM,OAAI,EAAKC,aAAaD,Y,sCAOlD,OAAIwB,KAAKb,MAAMC,QACN,sFAEA,wF,kCAITY,KAAKY,SAAS,CAAExB,SAAS,EAAOC,UAAU,IAC1CW,KAAKd,a,+BAGL,OACE,yBAAKR,UAAU,QACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,YAAb,qBACqB,IACnB,0BAAMA,UAAU,aAAasB,KAAKb,MAAMF,OAAOoB,QAFjD,OAEoE,IAClE,0BAAM3B,UAAU,aAAasB,KAAKb,MAAMF,OAAOqB,QAHjD,KAGkE,KAEjEN,KAAKlB,gBACN,yBAAKJ,UAAS,gBAAWsB,KAAKb,MAAMC,QAAU,4BAA6B,4BAA7D,YAA6FY,KAAKb,MAAME,SAAmB,GAAR,SAAeW,KAAKe,iBACrJ,yBAAKrC,UAAU,cACb,uBAAGA,UAAU,SAASC,QAASqB,KAAKhB,WAApC,qB,GA3GOgC,aCWJC,MATf,WACE,OACE,yBAAKvC,UAAU,OACb,2DACA,kBAAC,EAAD,QCJNwC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.6a4c0057.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst QuizOptions = ({ option, checkResults }) => {\r\n  const callParentsOption = props => {\r\n    return checkResults(option);\r\n  }\r\n  return (\r\n    <div className='fields animated zoomIn' onClick={callParentsOption}>\r\n      <div className='field-block'>{option}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizOptions;\r\n","import React, { Component } from \"react\";\r\nimport QuizOptions from \"./QuizOptions\";\r\n\r\nclass Quiz extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.renderOptions = this.renderOptions.bind(this);\r\n    this.checkResults = this.checkResults.bind(this);\r\n    this.playAgain = this.playAgain.bind(this);\r\n\r\n    let riddle = this.playGame();\r\n    let correct = false;\r\n    let gameOver = false;\r\n    this.state = { riddle, correct, gameOver };\r\n  }\r\n  randomNumber(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n  generateRandomOptions(sum) {\r\n    // let result = sum;\r\n    let resultsArray = [];\r\n    let randomNumberArray = [];\r\n\r\n    while (randomNumberArray.length <= 3) {\r\n      let randomNumber = this.randomNumber(1, 19);\r\n      if (randomNumberArray.indexOf(randomNumber) > -1) continue;\r\n      randomNumberArray.push(randomNumber);\r\n    }\r\n    for (let i = 0; i < 3; i++) {\r\n      let addSubtract = this.randomNumber(0, 1);\r\n      let result = sum;\r\n      if (addSubtract === 1) {\r\n        //add the number to the result\r\n        result += randomNumberArray[i];\r\n        resultsArray.push(result);\r\n      } else {\r\n        //subtract the number from the result\r\n        result -= randomNumberArray[i];\r\n        resultsArray.push(result);\r\n      }\r\n    }\r\n\r\n    return resultsArray;\r\n  }\r\n  playGame() {\r\n    let field1 = this.randomNumber(20, 40);\r\n    let field2 = this.randomNumber(20, 50);\r\n    let result = field1 + field2;\r\n    let resultsArray = this.generateRandomOptions(result);\r\n    resultsArray.push(result);\r\n    resultsArray.sort(function(a, b) {\r\n      return 0.5 - Math.random();\r\n    });\r\n\r\n    let riddle = {\r\n      resultsArray: resultsArray,\r\n      field1: field1,\r\n      field2: field2,\r\n      answer: result\r\n    };\r\n    if(this.state && this.state.gameOver) {\r\n      this.setState({ riddle: riddle});\r\n    } else {\r\n      return riddle;\r\n    }\r\n    \r\n  }\r\n  checkResults(option) {\r\n    if (this.state.riddle.answer === option) {\r\n      this.setState({ correct: true, gameOver: true });\r\n    } else {\r\n      this.setState({ correct: false, gameOver: true });\r\n    }\r\n  }\r\n  renderOptions() {\r\n    return (\r\n      <div className='options'>\r\n        {this.state.riddle.resultsArray.map((option, i) => (\r\n          <QuizOptions\r\n            option={option}\r\n            key={i}\r\n            checkResults={option => this.checkResults(option)}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n  renderMessage() {\r\n    if (this.state.correct) {\r\n      return <h3>Good job, Hit the button below to play the game again!</h3>;\r\n    } else {\r\n      return <h3> Ooopps!, Hit the button below to play the game again!</h3>;\r\n    }\r\n  }\r\n  playAgain() {\r\n    this.setState({ correct: false, gameOver: false});\r\n    this.playGame();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='quiz'>\r\n        <div className='quiz-content'>\r\n          <p className='question'>\r\n            What is the sum of{\" \"}\r\n            <span className='text-info'>{this.state.riddle.field1}</span> and{\" \"}\r\n            <span className='text-info'>{this.state.riddle.field2}</span> ?{\" \"}\r\n          </p>\r\n          {this.renderOptions()}\r\n          <div className={`after ${this.state.correct ? 'correct animated zoomInUp': 'wrong animated zoomInDown'} ${!this.state.gameOver ? 'hide': \"\"}`}>{this.renderMessage()}</div>\r\n          <div className='play-again'>\r\n            <a className='button' onClick={this.playAgain}>Play Again</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quiz;\r\n","import React from 'react';\r\nimport Quiz from './components/Quiz';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>*** A Simple React Game ***</h1>\r\n      <Quiz />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}